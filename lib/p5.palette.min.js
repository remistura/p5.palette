/*! p5.palette.js v0.1.0 - November 29, 2022 - License: MIT */
function invalidValue(t,e){throw new Error(`Invalid ${t} value: `+e)}const clearStoredPalettes=()=>this.removeItem(STORAGE_KEY),createGradientPalette=(p5.prototype.clearStoredPalettes=clearStoredPalettes,({amount:e=5,end:t=this.color(0),start:s=this.color(255)}={})=>{var r=[],o=s,i=t;let h=0;for(let t=0;t<e-1;t++)r.push(this.lerpColor(o,i,h)),h+=1/e;return r.push(i),this.createPalette(r)}),createGrayscalePalette=(p5.prototype.createGradientPalette=createGradientPalette,({amount:t=5,end:e=255,start:s=0}={})=>{(t<2||255<t)&&invalidValue("amount",t);s=this.color(s),e=this.color(e);return this.createGradientPalette({amount:t,end:e,start:s})}),createPalette=(p5.prototype.createGrayscalePalette=createGrayscalePalette,t=>{let e=[];return Array.isArray(t)?e=t:("string"==typeof t||t instanceof String)&&t.split("-").forEach(t=>{e.push(this.color("#"+t))}),new Palette(this,e)}),createRandomPalette=(p5.prototype.createPalette=createPalette,(t,e)=>{var s=t||5,r=e||this.random,o=[];for(let t=0;t<s;t++)o.push(this.color(255*r(),255*r(),255*r()));return createPalette(o)}),exportStoredPalettes=(p5.prototype.createRandomPalette=createRandomPalette,()=>{let e="const hexPalettes = [";loadStoredHexStrings().forEach(t=>{e+=`'${t}',`}),e=e.slice(0,-1),e+="];",this.saveStrings([e],"palettes-exported","js")}),loadColormindPalette=(p5.prototype.exportStoredPalettes=exportStoredPalettes,function(e,t){const s=new XMLHttpRequest,r=t=>{t=JSON.parse(t.response);if(t.result){const e=this.createPalette();return t.result.forEach(t=>{e.add(this.color(t))}),e}return null};let o=!1;if("function"==typeof e&&(o=!0,s.onreadystatechange=function(){var t;4===s.readyState&&200===s.status&&(t=r(s))&&e(t)}),s.open("POST",COLORMIND_API_URL,o),s.send(JSON.stringify({model:"default"})),4===s.readyState&&200===s.status){var i=r(s);if(i)return"function"==typeof this._decrementPreload&&this._decrementPreload(),i}}),loadColourLoversPalette=(p5.prototype.loadColormindPalette=loadColormindPalette,p5.prototype.registerPreloadMethod("loadColormindPalette",p5.prototype),t=>{const s=createPalette();return createPaletteFromColourLoversJsonp(COLOURLOVERS_API_URL+this.random(50)).then(e=>{for(let t=0;t<e.size();t++)s.add(e.get(t));"function"==typeof t&&t(e),"function"==typeof self._decrementPreload&&self._decrementPreload()}),s}),loadPalettes=(p5.prototype.loadColourLoversPalette=loadColourLoversPalette,p5.prototype.registerPreloadMethod("loadColourLoversPalette",p5.prototype),t=>{if(t){const e=[];return t.forEach(t=>{e.push(this.createPalette(t))}),e}return null}),loadStoredPalettes=(p5.prototype.loadPalettes=loadPalettes,()=>{var t=loadStoredHexStrings();return t?this.loadPalettes(t):null}),storePalette=(p5.prototype.loadStoredPalettes=loadStoredPalettes,e=>{if(e&&!(e.size()<1)){e=e.toHexString();let t=loadStoredHexStrings();(t=t||[]).push(e),this.storeItem(STORAGE_KEY,JSON.stringify(t))}}),createPaletteFromColourLoversJsonp=(p5.prototype.storePalette=storePalette,e=>new Promise(function(s,t){httpDo(e,"jsonp",{jsonpCallback:"jsonCallback"}).then(t=>{const e=new Palette(this);console.log(t),t[0].colors.forEach(t=>{e.add(this.color("#"+t))}),s(e)})})),loadStoredHexStrings=()=>{var t=getItem(STORAGE_KEY);return t?JSON.parse(t):null},COLORMIND_API_URL="http://colormind.io/api/",COLOURLOVERS_API_URL="http://www.colourlovers.com/api/palettes/top?format=json&numResults=1&resultOffset=",STORAGE_KEY="palettes";class Palette{constructor(t,e){this.P=t,this.colors=e||[],this.index=this.colors.length?0:-1,this.weighted=[],this.weights=[]}add(e){if(e instanceof Palette)for(let t=0;t<e.size();t++)this.colors.push(e.get(t));else this.colors.push(e);return this}addAnalogousColors(){var e=this.getAnalogous(),s=[];for(let t=0;t<this.size();t++)s.push(e.get(2*t)),s.push(this.get(t)),s.push(e.get(2*t+1));return this.colors=Array.from(s),this}addComplementaryColors(){var e=this.getComplementary(),s=[];for(let t=0;t<this.size();t++)s.push(this.get(t)),s.push(e.get(t));return this.colors=Array.from(s),this}addSplitComplementaryColors(){var e=this.getSplitComplementary(),s=[];for(let t=0;t<this.size();t++)s.push(e.get(2*t)),s.push(this.get(t)),s.push(e.get(2*t+1));return this.colors=Array.from(s),this}addTriadicColors(){var e=this.getTriadic(),s=[];for(let t=0;t<this.size();t++)s.push(e.get(2*t)),s.push(this.get(t)),s.push(e.get(2*t+1));return this.colors=Array.from(s),this}clear(){this.colors=[],this.index=-1,this.weighted=[],this.weights=[]}clone(){return this.P.createPalette(this.colors)}current(){return this.colors[this.index]}darken(){this.P.push(),this.P.colorMode(HSB);var e=[];for(let t=0;t<this.size();t++){var s=this.get(t);e.push(this.P.color(this.P.hue(s),this.P.saturation(s),.9*this.P.brightness(s)))}return this.colors=Array.from(e),this.P.pop(),this}draw(t){var{borderColor:e=0,borderWeight:s=1,drawBorder:r=!1,fontSize:o=12,height:i=50,offset:h=0,showCursor:l=!1,showIndex:a=!1,vertical:n=!1,width:c=50,x:t=0,y:P=0}=t||{};this.P.push(),this.P.noStroke();let u=t,g=P;var p=this.colors.length;for(let t=0;t<p;t++){var d,f,m=this.colors[t];r&&(this.P.noFill(),this.P.stroke(e),this.P.strokeWeight(s),this.P.rect(u,g,c,i)),this.P.noStroke(),this.P.fill(m),this.P.rect(u,g,c,i),a&&(this.P.colorMode(HSB),m=50<this.P.brightness(m)?0:255,this.P.fill(m),this.P.stroke(m),this.P.strokeWeight(1),this.P.textAlign(this.P.CENTER,this.P.CENTER),this.P.textSize(o),m=u+c/2,d=g+i/2,f=""+t,this.P.text(f,m,d),l)&&this.index===t&&(f=o<(f=textWidth(f))?f:o,this.P.noFill(),this.P.circle(m,d,1.5*f)),u+=n?0:c+h,g+=n?i+h:0}return this.P.pop(),this}get(t){return t?this.colors[t]:this.colors[this.index]}getColors(){return this.colors}getAnalogous(){const s=[];return this.colors.forEach(t=>{var[t,e]=this.#getAnalogous(t);s.push(t),s.push(e)}),new Palette(this.P,s)}getComplementary(){const e=[];return this.colors.forEach(t=>{e.push(this.#getComplementary(t))}),new Palette(this.P,e)}getSplitComplementary(){const s=[];return this.colors.forEach(t=>{var[t,e]=this.#getSplitComplementary(t);s.push(t),s.push(e)}),new Palette(this.P,s)}getTriadic(){const s=[];return this.colors.forEach(t=>{var[t,e]=this.#getTriadic(t);s.push(t),s.push(e)}),new Palette(this.P,s)}insertGradients(e=5,t=!1){var s,r=[];for(let t=0;t<this.size()-1;t++){var o=this.get(t),i=this.get(t+1);r.push(createGradientPalette({amount:e,start:o,end:i}))}return t&&(t=this.get(this.size()-1),s=this.get(0),r.push(createGradientPalette({amount:e,start:t,end:s}))),this.clear(),r.forEach(t=>{t.remove(t.size()-1),this.colors=this.colors.concat(t.getColors())}),this}lerp(t){var e=Math.floor(t*(this.colors.length-1));return e<0?this.colors[0]:e>=this.colors.length-1?this.colors[this.colors.length-1]:(t=(t-e/(this.colors.length-1))*(this.colors.length-1),color(this.colors[e]._getRed()+t*(this.colors[e+1]._getRed()-this.colors[e]._getRed()),this.colors[e]._getGreen()+t*(this.colors[e+1]._getGreen()-this.colors[e]._getGreen()),this.colors[e]._getBlue()+t*(this.colors[e+1]._getBlue()-this.colors[e]._getBlue())))}lighten(){this.P.push(),this.P.colorMode(HSB);var e=[];for(let t=0;t<this.size();t++){var s=this.get(t);e.push(this.P.color(this.P.hue(s),.9*this.P.saturation(s),1.1*this.P.brightness(s)))}return this.colors=Array.from(e),this.P.pop(),this}log(t=!0){t?this.#logHorizontal():this.#logVertical()}next(){return++this.index===this.colors.length&&(this.index=0),this.colors[this.index]}previous(){return--this.index<0&&(this.index=this.colors.length-1),this.colors[this.index]}random(t){if(!(this.colors.length<1))return t=t||this.P.random,0===this.weights.length&&this.setWeights(new Array(this.colors.length).fill(1)),this.weighted[Math.floor(t()*this.weighted.length)]}remove(t){return this.colors.splice(t,1),this.index>=this.colors.length&&(this.index=this.colors.length-1),this}reset(){return this.index=0,this}reverse(){return this.colors.reverse(),this}set(t){if(!(t<0||t>=this.colors.length))return this.index=t,this}setWeights(t){this.weights=t,this.weighted=this.#weight(this.colors)}size(){return this.colors.length}shuffle(t){const e=t||this.P.random;return this.colors=this.colors.sort(()=>e()-.5),this}sortByBrightness(){return this.colors=this.colors.sort((t,e)=>this.P.brightness(t)===this.P.brightness(e)?0:this.P.brightness(t)>this.P.brightness(e)?1:-1),this}sortByLightness(){return this.colors=this.colors.sort((t,e)=>this.P.lightness(t)===this.P.lightness(e)?0:this.P.lightness(t)>this.P.lightness(e)?1:-1),this}sortBySaturation(){return this.colors=this.colors.sort((t,e)=>this.P.saturation(t)===this.P.saturation(e)?0:this.P.saturation(t)>this.P.saturation(e)?1:-1),this}toHexString(){return this.toString().replaceAll("#","")}toString(t){const e=t&&t.separator||"-",s=t&&t.format||"#rrggbb";let r="";return this.colors.forEach(t=>{r=(r+=t.toString(s))+e}),r=r.slice(0,-1)}#getAnalogous(t){this.P.push(),this.P.colorMode(HSB);var e=this.P.color((this.P.hue(t)+330)%360,this.P.saturation(t),this.P.brightness(t)),t=this.P.color((this.P.hue(t)+30)%360,this.P.saturation(t),this.P.brightness(t));return this.P.pop(),[e,t]}#getComplementary(t){this.P.push(),this.P.colorMode(HSB);t=this.P.color((this.P.hue(t)+180)%360,this.P.saturation(t),this.P.brightness(t));return this.P.pop(),t}#getSplitComplementary(t){this.P.push(),this.P.colorMode(HSB);var e=this.P.color((this.P.hue(t)+150)%360,this.P.saturation(t),this.P.brightness(t)),t=this.P.color((this.P.hue(t)+210)%360,this.P.saturation(t),this.P.brightness(t));return this.P.pop(),[e,t]}#getTetradic(t){}#getTriadic(t){this.P.push(),this.P.colorMode(HSB);var e=this.P.color((this.P.hue(t)+120)%360,this.P.saturation(t),this.P.brightness(t)),t=this.P.color((this.P.hue(t)+240)%360,this.P.saturation(t),this.P.brightness(t));return this.P.pop(),[e,t]}#logHorizontal(){let e="",s="";var r=[];for(let t=0;t<this.size();t++){e+="%c%s";var o=this.colors[t].toString("#rrggbb");r.push("color: "+o),r.push("■■■■■■■■■"),s+=` ${o} `}console.log(e,...r),console.log("%c%s","color:gray",s)}#logVertical(){this.colors.forEach(t=>{t=t.toString("#rrggbb");console.log("%c%s%c %s","background: #222; color: "+t,"■■■■■■■■■■■■■■■■■■■■","color:gray",""+t)})}#weight(t){return[].concat(...t.map((t,e)=>Array(Math.ceil(100*this.weights[e])).fill(t)))}}